name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

      - name: Run unit tests
        run: go test -v -short ./...

      - name: Run integration tests with coverage
        run: |
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
          go tool cover -html=coverage.txt -o coverage.html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.txt
            coverage.html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          slug: starichkov/golang-simple-notes
          fail_ci_if_error: true

  docker:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: golang-simple-notes:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker-compose:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          # Install Docker CLI plugin for Compose
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          curl -SL https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
          chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
          docker compose version

      - name: Start services with Docker Compose
        run: docker compose up -d

      - name: Wait for services to be ready
        run: |
          # Wait for CouchDB to be ready
          echo "Waiting for CouchDB to be ready..."
          timeout 60s bash -c 'until curl -s http://localhost:5984 > /dev/null; do sleep 1; done'

          # Wait for MongoDB to be ready
          echo "Waiting for MongoDB to be ready..."
          timeout 60s bash -c 'until nc -z localhost 27017; do sleep 1; done'

          # Wait for API services to be ready
          echo "Waiting for API services to be ready..."
          timeout 60s bash -c 'until curl -s http://localhost:8080/api/notes > /dev/null; do sleep 1; done'
          timeout 60s bash -c 'until curl -s http://localhost:8082/api/notes > /dev/null; do sleep 1; done'

      - name: Test CouchDB API
        run: |
          # Test CouchDB API
          curl -s http://localhost:8080/api/notes | grep -q "id"
          if [ $? -eq 0 ]; then
            echo "CouchDB API test passed"
          else
            echo "CouchDB API test failed"
            exit 1
          fi

      - name: Test MongoDB API
        run: |
          # Test MongoDB API
          curl -s http://localhost:8082/api/notes | grep -q "id"
          if [ $? -eq 0 ]; then
            echo "MongoDB API test passed"
          else
            echo "MongoDB API test failed"
            exit 1
          fi

      - name: Stop services
        run: docker compose down
