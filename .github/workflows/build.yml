name: Build and Test

env:
  GO_LATEST: '1.24.6'
  DOCKER_COMPOSE_VERSION: 'v2.39.2'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        go-version: [ '1.21.x', '1.22.x', '1.23.x', '1.24.6' ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

      - name: Run unit tests
        run: go test -v -short ./...

      - name: Run integration tests with coverage
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage to Codecov
        if: matrix.go-version == env.GO_LATEST
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  docker-compose-test-mongodb:
    runs-on: ubuntu-22.04
    needs: build
    if: ${{ always() && contains(needs.build.result, 'success') }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go ${{ env.GO_LATEST }} (latest)
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_LATEST }}
          check-latest: true
          cache: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          curl -SL https://github.com/docker/compose/releases/download/${{ env.DOCKER_COMPOSE_VERSION }}/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
          chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
          docker compose version

      - name: Start MongoDB service
        run: docker compose -f docker-compose.mongodb.yml up -d

      - name: Wait for services
        run: |
          timeout 60s bash -c 'until nc -z localhost 27017 && curl -s http://localhost:8080/health > /dev/null; do sleep 1; done'

      - name: Test MongoDB API
        run: |
          curl -s http://localhost:8080/api/notes | grep -q "id" || (docker compose -f docker-compose.mongodb.yml logs && exit 1)

      - name: Stop services
        if: always()
        run: docker compose -f docker-compose.mongodb.yml down

  docker-compose-test-couchdb:
    runs-on: ubuntu-22.04
    needs: build
    if: ${{ always() && contains(needs.build.result, 'success') }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go ${{ env.GO_LATEST }} (latest)
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_LATEST }}
          check-latest: true
          cache: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          curl -SL https://github.com/docker/compose/releases/download/${{ env.DOCKER_COMPOSE_VERSION }}/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
          chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
          docker compose version

      - name: Start CouchDB service
        run: docker compose -f docker-compose.couchdb.yml up -d

      - name: Wait for services
        run: |
          timeout 60s bash -c 'until curl -s http://localhost:5984 > /dev/null && curl -s http://localhost:8080/health > /dev/null; do sleep 1; done'

      - name: Test CouchDB API
        run: |
          curl -s http://localhost:8080/api/notes | grep -q "id" || (docker compose -f docker-compose.couchdb.yml logs && exit 1)

      - name: Stop services
        if: always()
        run: docker compose -f docker-compose.couchdb.yml down

  docker-compose-test-memory:
    runs-on: ubuntu-22.04
    needs: build
    if: ${{ always() && contains(needs.build.result, 'success') }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go ${{ env.GO_LATEST }} (latest)
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_LATEST }}
          check-latest: true
          cache: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          curl -SL https://github.com/docker/compose/releases/download/${{ env.DOCKER_COMPOSE_VERSION }}/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
          chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
          docker compose version

      - name: Start in-memory service
        run: docker compose up -d

      - name: Wait for services
        run: |
          timeout 60s bash -c 'until curl -s http://localhost:8080/health > /dev/null; do sleep 1; done'

      - name: Test In-Memory API
        run: |
          curl -s http://localhost:8080/api/notes | grep -q "id" || (docker compose logs && exit 1)

      - name: Stop services
        if: always()
        run: docker compose down
